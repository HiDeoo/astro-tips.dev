---
import type { GetStaticPaths } from "astro";
import BaseLayout from "~/layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";
import Prose from "~/components/Prose.astro";
import TOC from "~/components/TOC.astro";
import { Image } from "astro:assets";

export const getStaticPaths = (async () => {
  const tips = await getCollection("tips");

  return tips.map((tip) => ({ params: { slug: tip.slug }, props: { tip } }));
}) satisfies GetStaticPaths;

const { tip } = Astro.props;
const { data } = tip;
const { Content, headings } = await tip.render();
const authors = await Promise.all(
  tip.data.authors.map((author) => getEntry(author))
);
---

<BaseLayout title={tip.data.title}>
  <div class="max-w-6xl mx-auto px-4 py-16">
    <div class="flex items-center justify-between">
      <a class="button button-gray" href="/tips">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
          ><path
            fill="none"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="m15 6l-6 6l6 6"></path>
        </svg>
        <span>All Tips</span>
      </a>
      <time datetime={data.date.toISOString()}
        >{
          new Intl.DateTimeFormat("en-US", { dateStyle: "medium" }).format(
            data.date
          )
        }</time
      >
    </div>
    <div class="mt-4 flex items-center -space-x-4 hover:space-x-0">
      {
        authors.map(({ slug, data }) => (
          <a
            href={`/authors/${slug}`}
            class="relative transition-[margin] rounded-full"
          >
            <Image
              src={data.avatar}
              alt=""
              class="w-8 h-8 rounded-full border border-gray-50"
            />
            <span class="sr-only">Written by {data.name}</span>
          </a>
        ))
      }
    </div>
    <div class="grid grid-cols-4 gap-4">
      <Prose class="my-8 col-span-3">
        <h1>{data.title}</h1>
        <p class="lead">
          {data.description}
        </p>
        <Content />
      </Prose>
      <div>
        <TOC {headings} />
      </div>
    </div>
    <a class="button button-gray inline-flex" href="/tips">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
        ><path
          fill="none"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m15 6l-6 6l6 6"></path>
      </svg>
      <span>All Tips</span>
    </a>
  </div>
</BaseLayout>
